{
	"id": "CVE-2021-47416",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  phy: mdio: fix memory leak  Syzbot reported memory leak in MDIO bus interface, the problem was in wrong state logic.  MDIOBUS_ALLOCATED indicates 2 states: \t1. Bus is only allocated \t2. Bus allocated and __mdiobus_register() fails, but \t   device_register() was called  In case of device_register() has been called we should call put_device() to correctly free the memory allocated for this device, but mdiobus_free() calls just kfree(dev) in case of MDIOBUS_ALLOCATED state  To avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED _before_ calling device_register(), because put_device() should be called even in case of device_register() failure.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.14.12-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.10.3-1"
				}
			]
		}
	]
}
