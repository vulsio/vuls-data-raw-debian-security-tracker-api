{
	"id": "CVE-2024-50078",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  Bluetooth: Call iso_exit() on module unload  If iso_init() has been called, iso_exit() must be called on module unload. Without that, the struct proto that iso_init() registered with proto_register() becomes invalid, which could cause unpredictable problems later. In my case, with CONFIG_LIST_HARDENED and CONFIG_BUG_ON_DATA_CORRUPTION enabled, loading the module again usually triggers this BUG():    list_add corruption. next->prev should be prev (ffffffffb5355fd0),     but was 0000000000000068. (next=ffffffffc0a010d0).   ------------[ cut here ]------------   kernel BUG at lib/list_debug.c:29!   Oops: invalid opcode: 0000 [#1] PREEMPT SMP PTI   CPU: 1 PID: 4159 Comm: modprobe Not tainted 6.10.11-4+bt2-ao-desktop #1   RIP: 0010:__list_add_valid_or_report+0x61/0xa0   ...     __list_add_valid_or_report+0x61/0xa0     proto_register+0x299/0x320     hci_sock_init+0x16/0xc0 [bluetooth]     bt_init+0x68/0xd0 [bluetooth]     __pfx_bt_init+0x10/0x10 [bluetooth]     do_one_initcall+0x80/0x2f0     do_init_module+0x8b/0x230     __do_sys_init_module+0x15f/0x190     do_syscall_64+0x68/0x110   ...",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.11.5-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.12.5-1"
				}
			]
		}
	]
}
