{
	"id": "CVE-2024-41032",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  mm: vmalloc: check if a hash-index is in cpu_possible_mask  The problem is that there are systems where cpu_possible_mask has gaps between set CPUs, for example SPARC.  In this scenario addr_to_vb_xa() hash function can return an index which accesses to not-possible and not setup CPU area using per_cpu() macro.  This results in an oops on SPARC.  A per-cpu vmap_block_queue is also used as hash table, incorrectly assuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index to a next possible CPU.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.9.10-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.11.2-1"
				}
			]
		}
	]
}
