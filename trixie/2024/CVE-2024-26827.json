{
	"id": "CVE-2024-26827",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  i2c: qcom-geni: Correct I2C TRE sequence  For i2c read operation in GSI mode, we are getting timeout due to malformed TRE basically incorrect TRE sequence in gpi(drivers/dma/qcom/gpi.c) driver.  I2C driver has geni_i2c_gpi(I2C_WRITE) function which generates GO TRE and geni_i2c_gpi(I2C_READ)generates DMA TRE. Hence to generate GO TRE before DMA TRE, we should move geni_i2c_gpi(I2C_WRITE) before geni_i2c_gpi(I2C_READ) inside the I2C GSI mode transfer function i.e. geni_i2c_gpi_xfer().  TRE stands for Transfer Ring Element - which is basically an element with size of 4 words. It contains all information like slave address, clk divider, dma address value data size etc).  Mainly we have 3 TREs(Config, GO and DMA tre). - CONFIG TRE : consists of internal register configuration which is                required before start of the transfer. - DMA TRE :    contains DDR/Memory address, called as DMA descriptor. - GO TRE :     contains Transfer directions, slave ID, Delay flags, Length                of the transfer.  I2c driver calls GPI driver API to config each TRE depending on the protocol.  For read operation tre sequence will be as below which is not aligned to hardware programming guide.  - CONFIG tre - DMA tre - GO tre  As per Qualcomm's internal Hardware Programming Guide, we should configure TREs in below sequence for any RX only transfer.  - CONFIG tre - GO tre - DMA tre",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "open",
			"urgency": "not yet assigned",
			"repository": [
				{
					"name": "trixie",
					"version": "6.6.15-2"
				}
			]
		}
	]
}
