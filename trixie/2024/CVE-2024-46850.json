{
	"id": "CVE-2024-46850",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  drm/amd/display: Avoid race between dcn35_set_drr() and dc_state_destruct()  dc_state_destruct() nulls the resource context of the DC state. The pipe context passed to dcn35_set_drr() is a member of this resource context.  If dc_state_destruct() is called parallel to the IRQ processing (which calls dcn35_set_drr() at some point), we can end up using already nulled function callback fields of struct stream_resource.  The logic in dcn35_set_drr() already tries to avoid this, by checking tg against NULL. But if the nulling happens exactly after the NULL check and before the next access, then we get a race.  Avoid this by copying tg first to a local variable, and then use this variable for all the operations. This should work, as long as nobody frees the resource pool where the timing generators live.  (cherry picked from commit 0607a50c004798a96e62c089a4c34c220179dcb5)",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.10.11-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.10.11-1"
				}
			]
		}
	]
}
