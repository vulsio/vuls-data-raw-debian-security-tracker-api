{
	"id": "CVE-2024-47742",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  firmware_loader: Block path traversal  Most firmware names are hardcoded strings, or are constructed from fairly constrained format strings where the dynamic parts are just some hex numbers or such.  However, there are a couple codepaths in the kernel where firmware file names contain string components that are passed through from a device or semi-privileged userspace; the ones I could find (not counting interfaces that require root privileges) are:   - lpfc_sli4_request_firmware_update() seems to construct the firmware    filename from \"ModelName\", a string that was previously parsed out of    some descriptor (\"Vital Product Data\") in lpfc_fill_vpd()  - nfp_net_fw_find() seems to construct a firmware filename from a model    name coming from nfp_hwinfo_lookup(pf->hwinfo, \"nffw.partno\"), which I    think parses some descriptor that was read from the device.    (But this case likely isn't exploitable because the format string looks    like \"netronome/nic_%s\", and there shouldn't be any *folders* starting    with \"netronome/nic_\". The previous case was different because there,    the \"%s\" is *at the start* of the format string.)  - module_flash_fw_schedule() is reachable from the    ETHTOOL_MSG_MODULE_FW_FLASH_ACT netlink command, which is marked as    GENL_UNS_ADMIN_PERM (meaning CAP_NET_ADMIN inside a user namespace is    enough to pass the privilege check), and takes a userspace-provided    firmware name.    (But I think to reach this case, you need to have CAP_NET_ADMIN over a    network namespace that a special kind of ethernet device is mapped into,    so I think this is not a viable attack path in practice.)  Fix it by rejecting any firmware names containing \"..\" path components.  For what it's worth, I went looking and haven't found any USB device drivers that use the firmware loader dangerously.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.11.2-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.11.5-1"
				}
			]
		}
	]
}
