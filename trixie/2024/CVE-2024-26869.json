{
	"id": "CVE-2024-26869",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  f2fs: fix to truncate meta inode pages forcely  Below race case can cause data corruption:  Thread A\t\t\t\tGC thread \t\t\t\t\t- gc_data_segment \t\t\t\t\t - ra_data_block \t\t\t\t\t  - locked meta_inode page - f2fs_inplace_write_data  - invalidate_mapping_pages  : fail to invalidate meta_inode page    due to lock failure or dirty|writeback    status  - f2fs_submit_page_bio  : write last dirty data to old blkaddr \t\t\t\t\t - move_data_block \t\t\t\t\t  - load old data from meta_inode page \t\t\t\t\t  - f2fs_submit_page_write \t\t\t\t\t  : write old data to new blkaddr  Because invalidate_mapping_pages() will skip invalidating page which has unclear status including locked, dirty, writeback and so on, so we need to use truncate_inode_pages_range() instead of invalidate_mapping_pages() to make sure meta_inode page will be dropped.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.7.12-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.12.11-1"
				}
			]
		}
	]
}
