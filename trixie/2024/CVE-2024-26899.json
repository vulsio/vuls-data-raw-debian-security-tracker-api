{
	"id": "CVE-2024-26899",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  block: fix deadlock between bd_link_disk_holder and partition scan  'open_mutex' of gendisk is used to protect open/close block devices. But in bd_link_disk_holder(), it is used to protect the creation of symlink between holding disk and slave bdev, which introduces some issues.  When bd_link_disk_holder() is called, the driver is usually in the process of initialization/modification and may suspend submitting io. At this time, any io hold 'open_mutex', such as scanning partitions, can cause deadlocks. For example, in raid:  T1                              T2 bdev_open_by_dev  lock open_mutex [1]  ...   efi_partition   ...    md_submit_bio \t\t\t\tmd_ioctl mddev_syspend \t\t\t\t  -> suspend all io \t\t\t\t md_add_new_disk \t\t\t\t  bind_rdev_to_array \t\t\t\t   bd_link_disk_holder \t\t\t\t    try lock open_mutex [2]     md_handle_request      -> wait mddev_resume  T1 scan partition, T2 add a new device to raid. T1 waits for T2 to resume mddev, but T2 waits for open_mutex held by T1. Deadlock occurs.  Fix it by introducing a local mutex 'blk_holder_mutex' to replace 'open_mutex'.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.7.12-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.9.10-1"
				}
			]
		}
	]
}
