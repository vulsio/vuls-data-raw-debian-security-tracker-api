{
	"id": "CVE-2024-56652",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  drm/xe/reg_sr: Remove register pool  That pool implementation doesn't really work: if the krealloc happens to move the memory and return another address, the entries in the xarray become invalid, leading to use-after-free later:  \tBUG: KASAN: slab-use-after-free in xe_reg_sr_apply_mmio+0x570/0x760 [xe] \tRead of size 4 at addr ffff8881244b2590 by task modprobe/2753  \tAllocated by task 2753: \t kasan_save_stack+0x39/0x70 \t kasan_save_track+0x14/0x40 \t kasan_save_alloc_info+0x37/0x60 \t __kasan_kmalloc+0xc3/0xd0 \t __kmalloc_node_track_caller_noprof+0x200/0x6d0 \t krealloc_noprof+0x229/0x380  Simplify the code to fix the bug. A better pooling strategy may be added back later if needed.  (cherry picked from commit e5283bd4dfecbd3335f43b62a68e24dae23f59e4)",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.12.6-1",
			"repository": [
				{
					"name": "trixie",
					"version": "6.12.10-1"
				}
			]
		}
	]
}
