{
	"id": "CVE-2021-47066",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  async_xor: increase src_offs when dropping destination page  Now we support sharing one page if PAGE_SIZE is not equal stripe size. To support this, it needs to support calculating xor value with different offsets for each r5dev. One offset array is used to record those offsets.  In RMW mode, parity page is used as a source page. It sets ASYNC_TX_XOR_DROP_DST before calculating xor value in ops_run_prexor5. So it needs to add src_list and src_offs at the same time. Now it only needs src_list. So the xor value which is calculated is wrong. It can cause data corruption problem.  I can reproduce this problem 100% on a POWER8 machine. The steps are:    mdadm -CR /dev/md0 -l5 -n3 /dev/sdb1 /dev/sdc1 /dev/sdd1 --size=3G   mkfs.xfs /dev/md0   mount /dev/md0 /mnt/test   mount: /mnt/test: mount(2) system call failed: Structure needs cleaning.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.10.38-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.11.2-1"
				}
			]
		}
	]
}
