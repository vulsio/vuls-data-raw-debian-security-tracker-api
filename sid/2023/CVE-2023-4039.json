{
	"id": "CVE-2023-4039",
	"description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
	"scope": "local",
	"packages": [
		{
			"name": "gcc-9",
			"status": "open",
			"urgency": "not yet assigned",
			"repository": [
				{
					"name": "sid",
					"version": "9.5.0-5"
				}
			]
		},
		{
			"name": "gcc-10",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "10.5.0-3",
			"repository": [
				{
					"name": "sid",
					"version": "10.5.0-3"
				}
			]
		},
		{
			"name": "gcc-13",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "13.2.0-4",
			"repository": [
				{
					"name": "sid",
					"version": "13.2.0-16.1"
				}
			]
		},
		{
			"name": "gcc-11",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "11.4.0-4",
			"repository": [
				{
					"name": "sid",
					"version": "11.4.0-7"
				}
			]
		},
		{
			"name": "gcc-12",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "12.3.0-9",
			"repository": [
				{
					"name": "sid",
					"version": "12.3.0-15"
				}
			]
		}
	]
}
