{
	"id": "CVE-2024-42126",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  powerpc: Avoid nmi_enter/nmi_exit in real mode interrupt.  nmi_enter()/nmi_exit() touches per cpu variables which can lead to kernel crash when invoked during real mode interrupt handling (e.g. early HMI/MCE interrupt handler) if percpu allocation comes from vmalloc area.  Early HMI/MCE handlers are called through DEFINE_INTERRUPT_HANDLER_NMI() wrapper which invokes nmi_enter/nmi_exit calls. We don't see any issue when percpu allocation is from the embedded first chunk. However with CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK enabled there are chances where percpu allocation can come from the vmalloc area.  With kernel command line \"percpu_alloc=page\" we can force percpu allocation to come from vmalloc area and can see kernel crash in machine_check_early:  [    1.215714] NIP [c000000000e49eb4] rcu_nmi_enter+0x24/0x110 [    1.215717] LR [c0000000000461a0] machine_check_early+0xf0/0x2c0 [    1.215719] --- interrupt: 200 [    1.215720] [c000000fffd73180] [0000000000000000] 0x0 (unreliable) [    1.215722] [c000000fffd731b0] [0000000000000000] 0x0 [    1.215724] [c000000fffd73210] [c000000000008364] machine_check_early_common+0x134/0x1f8  Fix this by avoiding use of nmi_enter()/nmi_exit() in real mode if percpu first chunk is not embedded.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.9.9-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.10.3-1"
				}
			]
		}
	]
}
