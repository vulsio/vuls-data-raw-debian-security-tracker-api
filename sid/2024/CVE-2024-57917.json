{
	"id": "CVE-2024-57917",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  topology: Keep the cpumask unchanged when printing cpumap  During fuzz testing, the following warning was discovered:   different return values (15 and 11) from vsnprintf(\"%*pbl  \", ...)   test:keyward is WARNING in kvasprintf  WARNING: CPU: 55 PID: 1168477 at lib/kasprintf.c:30 kvasprintf+0x121/0x130  Call Trace:   kvasprintf+0x121/0x130   kasprintf+0xa6/0xe0   bitmap_print_to_buf+0x89/0x100   core_siblings_list_read+0x7e/0xb0   kernfs_file_read_iter+0x15b/0x270   new_sync_read+0x153/0x260   vfs_read+0x215/0x290   ksys_read+0xb9/0x160   do_syscall_64+0x56/0x100   entry_SYSCALL_64_after_hwframe+0x78/0xe2  The call trace shows that kvasprintf() reported this warning during the printing of core_siblings_list. kvasprintf() has several steps:   (1) First, calculate the length of the resulting formatted string.   (2) Allocate a buffer based on the returned length.   (3) Then, perform the actual string formatting.   (4) Check whether the lengths of the formatted strings returned in      steps (1) and (2) are consistent.  If the core_cpumask is modified between steps (1) and (3), the lengths obtained in these two steps may not match. Indeed our test includes cpu hotplugging, which should modify core_cpumask while printing.  To fix this issue, cache the cpumask into a temporary variable before calling cpumap_print_{list, cpumask}_to_buf(), to keep it unchanged during the printing process.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.12.10-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.12.10-1"
				}
			]
		}
	]
}
