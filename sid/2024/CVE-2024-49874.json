{
	"id": "CVE-2024-49874",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  i3c: master: svc: Fix use after free vulnerability in svc_i3c_master Driver Due to Race Condition  In the svc_i3c_master_probe function, &master->hj_work is bound with svc_i3c_master_hj_work, &master->ibi_work is bound with svc_i3c_master_ibi_work. And svc_i3c_master_ibi_work  can start the hj_work, svc_i3c_master_irq_handler can start the ibi_work.  If we remove the module which will call svc_i3c_master_remove to make cleanup, it will free master->base through i3c_master_unregister while the work mentioned above will be used. The sequence of operations that may lead to a UAF bug is as follows:  CPU0                                         CPU1                                      | svc_i3c_master_hj_work svc_i3c_master_remove               | i3c_master_unregister(&master->base)| device_unregister(&master->dev)     | device_release                      | //free master->base                 |                                     | i3c_master_do_daa(&master->base)                                     | //use master->base  Fix it by ensuring that the work is canceled before proceeding with the cleanup in svc_i3c_master_remove.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.11.4-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.12.13-1"
				}
			]
		}
	]
}
