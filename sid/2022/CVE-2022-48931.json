{
	"id": "CVE-2022-48931",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  configfs: fix a race in configfs_{,un}register_subsystem()  When configfs_register_subsystem() or configfs_unregister_subsystem() is executing link_group() or unlink_group(), it is possible that two processes add or delete list concurrently. Some unfortunate interleavings of them can cause kernel panic.  One of cases is: A --> B --> C --> D A <-- B <-- C <-- D       delete list_head *B        |      delete list_head *C --------------------------------|----------------------------------- configfs_unregister_subsystem   |   configfs_unregister_subsystem   unlink_group                  |     unlink_group     unlink_obj                  |       unlink_obj       list_del_init             |         list_del_init         __list_del_entry        |           __list_del_entry           __list_del            |             __list_del             // next == C        |             next->prev = prev   |                                 |               next->prev = prev             prev->next = next   |                                 |                 // prev == B                                 |                 prev->next = next  Fix this by adding mutex when calling link_group() or unlink_group(), but parent configfs_subsystem is NULL when config_item is root. So I create a mutex configfs_subsystem_mutex.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.16.12-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.11.4-1"
				}
			]
		}
	]
}
