{
	"id": "CVE-2022-35948",
	"description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
	"scope": "local",
	"packages": [
		{
			"name": "node-undici",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.8.2+dfsg1+~cs18.9.18.1-1",
			"repository": [
				{
					"name": "sid",
					"version": "5.28.4+dfsg1+~cs23.12.11-1"
				}
			]
		}
	]
}
