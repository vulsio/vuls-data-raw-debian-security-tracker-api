{
	"id": "CVE-2022-48809",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  net: fix a memleak when uncloning an skb dst and its metadata  When uncloning an skb dst and its associated metadata, a new dst+metadata is allocated and later replaces the old one in the skb. This is helpful to have a non-shared dst+metadata attached to a specific skb.  The issue is the uncloned dst+metadata is initialized with a refcount of 1, which is increased to 2 before attaching it to the skb. When tun_dst_unclone returns, the dst+metadata is only referenced from a single place (the skb) while its refcount is 2. Its refcount will never drop to 0 (when the skb is consumed), leading to a memory leak.  Fix this by removing the call to dst_hold in tun_dst_unclone, as the dst+metadata refcount is already 1.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.16.10-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.10.4-1"
				}
			]
		}
	]
}
