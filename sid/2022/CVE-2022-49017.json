{
	"id": "CVE-2022-49017",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  tipc: re-fetch skb cb after tipc_msg_validate  As the call trace shows, the original skb was freed in tipc_msg_validate(), and dereferencing the old skb cb would cause an use-after-free crash.    BUG: KASAN: use-after-free in tipc_crypto_rcv_complete+0x1835/0x2240 [tipc]   Call Trace:    <IRQ>    tipc_crypto_rcv_complete+0x1835/0x2240 [tipc]    tipc_crypto_rcv+0xd32/0x1ec0 [tipc]    tipc_rcv+0x744/0x1150 [tipc]   ...   Allocated by task 47078:    kmem_cache_alloc_node+0x158/0x4d0    __alloc_skb+0x1c1/0x270    tipc_buf_acquire+0x1e/0xe0 [tipc]    tipc_msg_create+0x33/0x1c0 [tipc]    tipc_link_build_proto_msg+0x38a/0x2100 [tipc]    tipc_link_timeout+0x8b8/0xef0 [tipc]    tipc_node_timeout+0x2a1/0x960 [tipc]    call_timer_fn+0x2d/0x1c0   ...   Freed by task 47078:    tipc_msg_validate+0x7b/0x440 [tipc]    tipc_crypto_rcv_complete+0x4b5/0x2240 [tipc]    tipc_crypto_rcv+0xd32/0x1ec0 [tipc]    tipc_rcv+0x744/0x1150 [tipc]  This patch fixes it by re-fetching the skb cb from the new allocated skb after calling tipc_msg_validate().",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.0.12-1",
			"repository": [
				{
					"name": "sid",
					"version": "6.12.13-1"
				}
			]
		}
	]
}
