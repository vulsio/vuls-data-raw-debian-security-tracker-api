{
	"id": "CVE-2024-45016",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  netem: fix return value if duplicate enqueue fails  There is a bug in netem_enqueue() introduced by commit 5845f706388a (\"net: netem: fix skb length BUG_ON in __skb_to_sgvec\") that can lead to a use-after-free.  This commit made netem_enqueue() always return NET_XMIT_SUCCESS when a packet is duplicated, which can cause the parent qdisc's q.qlen to be mistakenly incremented. When this happens qlen_notify() may be skipped on the parent during destruction, leaving a dangling pointer for some classful qdiscs like DRR.  There are two ways for the bug happen:  - If the duplicated packet is dropped by rootq->enqueue() and then   the original packet is also dropped. - If rootq->enqueue() sends the duplicated packet to a different qdisc   and the original packet is dropped.  In both cases NET_XMIT_SUCCESS is returned even though no packets are enqueued at the netem qdisc.  The fix is to defer the enqueue of the duplicate packet until after the original packet has been guaranteed to return NET_XMIT_SUCCESS.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.10.226-1",
			"repository": [
				{
					"name": "bullseye",
					"version": "5.10.223-1"
				},
				{
					"name": "bullseye-security",
					"version": "5.10.226-1"
				}
			]
		},
		{
			"name": "linux-6.1",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.119-1~deb11u1",
			"repository": [
				{
					"name": "bullseye-security",
					"version": "6.1.119-1~deb11u1"
				}
			]
		}
	]
}
