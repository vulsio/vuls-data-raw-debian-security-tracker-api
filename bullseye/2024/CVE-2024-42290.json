{
	"id": "CVE-2024-42290",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  irqchip/imx-irqsteer: Handle runtime power management correctly  The power domain is automatically activated from clk_prepare(). However, on certain platforms like i.MX8QM and i.MX8QXP, the power-on handling invokes sleeping functions, which triggers the 'scheduling while atomic' bug in the context switch path during device probing:   BUG: scheduling while atomic: kworker/u13:1/48/0x00000002  Call trace:   __schedule_bug+0x54/0x6c   __schedule+0x7f0/0xa94   schedule+0x5c/0xc4   schedule_preempt_disabled+0x24/0x40   __mutex_lock.constprop.0+0x2c0/0x540   __mutex_lock_slowpath+0x14/0x20   mutex_lock+0x48/0x54   clk_prepare_lock+0x44/0xa0   clk_prepare+0x20/0x44   imx_irqsteer_resume+0x28/0xe0   pm_generic_runtime_resume+0x2c/0x44   __genpd_runtime_resume+0x30/0x80   genpd_runtime_resume+0xc8/0x2c0   __rpm_callback+0x48/0x1d8   rpm_callback+0x6c/0x78   rpm_resume+0x490/0x6b4   __pm_runtime_resume+0x50/0x94   irq_chip_pm_get+0x2c/0xa0   __irq_do_set_handler+0x178/0x24c   irq_set_chained_handler_and_data+0x60/0xa4   mxc_gpio_probe+0x160/0x4b0  Cure this by implementing the irq_bus_lock/sync_unlock() interrupt chip callbacks and handle power management in them as they are invoked from non-atomic context.  [ tglx: Rewrote change log, added Fixes tag ]",
	"scope": "local",
	"packages": [
		{
			"name": "linux-6.1",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.119-1~deb11u1",
			"repository": [
				{
					"name": "bullseye-security",
					"version": "6.1.119-1~deb11u1"
				}
			]
		},
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.10.226-1",
			"repository": [
				{
					"name": "bullseye",
					"version": "5.10.223-1"
				},
				{
					"name": "bullseye-security",
					"version": "5.10.226-1"
				}
			]
		}
	]
}
