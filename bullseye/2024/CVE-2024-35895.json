{
	"id": "CVE-2024-35895",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  bpf, sockmap: Prevent lock inversion deadlock in map delete elem  syzkaller started using corpuses where a BPF tracing program deletes elements from a sockmap/sockhash map. Because BPF tracing programs can be invoked from any interrupt context, locks taken during a map_delete_elem operation must be hardirq-safe. Otherwise a deadlock due to lock inversion is possible, as reported by lockdep:         CPU0                    CPU1        ----                    ----   lock(&htab->buckets[i].lock);                                local_irq_disable();                                lock(&host->lock);                                lock(&htab->buckets[i].lock);   <Interrupt>     lock(&host->lock);  Locks in sockmap are hardirq-unsafe by design. We expects elements to be deleted from sockmap/sockhash only in task (normal) context with interrupts enabled, or in softirq context.  Detect when map_delete_elem operation is invoked from a context which is _not_ hardirq-unsafe, that is interrupts are disabled, and bail out with an error.  Note that map updates are not affected by this issue. BPF verifier does not allow updating sockmap/sockhash from a BPF tracing program today.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.10.216-1",
			"repository": [
				{
					"name": "bullseye-security",
					"version": "5.10.218-1"
				},
				{
					"name": "bullseye",
					"version": "5.10.218-1"
				}
			]
		}
	]
}
