{
	"id": "CVE-2024-40917",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  memblock: make memblock_set_node() also warn about use of MAX_NUMNODES  On an (old) x86 system with SRAT just covering space above 4Gb:      ACPI: SRAT: Node 0 PXM 0 [mem 0x100000000-0xfffffffff] hotplug  the commit referenced below leads to this NUMA configuration no longer being refused by a CONFIG_NUMA=y kernel (previously      NUMA: nodes only cover 6144MB of your 8185MB e820 RAM. Not used.     No NUMA configuration found     Faking a node at [mem 0x0000000000000000-0x000000027fffffff]  was seen in the log directly after the message quoted above), because of memblock_validate_numa_coverage() checking for NUMA_NO_NODE (only). This in turn led to memblock_alloc_range_nid()'s warning about MAX_NUMNODES triggering, followed by a NULL deref in memmap_init() when trying to access node 64's (NODE_SHIFT=6) node data.  To compensate said change, make memblock_set_node() warn on and adjust a passed in value of MAX_NUMNODES, just like various other functions already do.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "unimportant",
			"fixed_version": "0",
			"repository": [
				{
					"name": "bullseye",
					"version": "5.10.218-1"
				},
				{
					"name": "bullseye-security",
					"version": "5.10.218-1"
				}
			]
		}
	]
}
