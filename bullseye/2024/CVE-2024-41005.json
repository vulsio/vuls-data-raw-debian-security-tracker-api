{
	"id": "CVE-2024-41005",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  netpoll: Fix race condition in netpoll_owner_active  KCSAN detected a race condition in netpoll:  \tBUG: KCSAN: data-race in net_rx_action / netpoll_send_skb \twrite (marked) to 0xffff8881164168b0 of 4 bytes by interrupt on cpu 10: \tnet_rx_action (./include/linux/netpoll.h:90 net/core/dev.c:6712 net/core/dev.c:6822) <snip> \tread to 0xffff8881164168b0 of 4 bytes by task 1 on cpu 2: \tnetpoll_send_skb (net/core/netpoll.c:319 net/core/netpoll.c:345 net/core/netpoll.c:393) \tnetpoll_send_udp (net/core/netpoll.c:?) <snip> \tvalue changed: 0x0000000a -> 0xffffffff  This happens because netpoll_owner_active() needs to check if the current CPU is the owner of the lock, touching napi->poll_owner non atomically. The ->poll_owner field contains the current CPU holding the lock.  Use an atomic read to check if the poll owner is the current CPU.",
	"scope": "local",
	"packages": [
		{
			"name": "linux-6.1",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.119-1~deb11u1",
			"repository": [
				{
					"name": "bullseye-security",
					"version": "6.1.119-1~deb11u1"
				}
			]
		},
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "5.10.221-1",
			"repository": [
				{
					"name": "bullseye-security",
					"version": "5.10.226-1"
				},
				{
					"name": "bullseye",
					"version": "5.10.223-1"
				}
			]
		}
	]
}
