{
	"id": "CVE-2025-21644",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  drm/xe: Fix tlb invalidation when wedging  If GuC fails to load, the driver wedges, but in the process it tries to do stuff that may not be initialized yet. This moves the xe_gt_tlb_invalidation_init() to be done earlier: as its own doc says, it's a software-only initialization and should had been named with the _early() suffix.  Move it to be called by xe_gt_init_early(), so the locks and seqno are initialized, avoiding a NULL ptr deref when wedging:  \txe 0000:03:00.0: [drm] *ERROR* GT0: load failed: status: Reset = 0, BootROM = 0x50, UKernel = 0x00, MIA = 0x00, Auth = 0x01 \txe 0000:03:00.0: [drm] *ERROR* GT0: firmware signature verification failed \txe 0000:03:00.0: [drm] *ERROR* CRITICAL: Xe has declared device 0000:03:00.0 as wedged. \t... \tBUG: kernel NULL pointer dereference, address: 0000000000000000 \t#PF: supervisor read access in kernel mode \t#PF: error_code(0x0000) - not-present page \tPGD 0 P4D 0 \tOops: Oops: 0000 [#1] PREEMPT SMP NOPTI \tCPU: 9 UID: 0 PID: 3908 Comm: modprobe Tainted: G     U  W          6.13.0-rc4-xe+ #3 \tTainted: [U]=USER, [W]=WARN \tHardware name: Intel Corporation Alder Lake Client Platform/AlderLake-S ADP-S DDR5 UDIMM CRB, BIOS ADLSFWI1.R00.3275.A00.2207010640 07/01/2022 \tRIP: 0010:xe_gt_tlb_invalidation_reset+0x75/0x110 [xe]  This can be easily triggered by poking the GuC binary to force a signature failure. There will still be an extra message,  \txe 0000:03:00.0: [drm] *ERROR* GT0: GuC mmio request 0x4100: no reply 0x4100  but that's better than a NULL ptr deref.  (cherry picked from commit 5001ef3af8f2c972d6fd9c5221a8457556f8bea6)",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "unimportant",
			"fixed_version": "0",
			"repository": [
				{
					"name": "bullseye",
					"version": "5.10.223-1"
				},
				{
					"name": "bullseye-security",
					"version": "5.10.226-1"
				}
			]
		}
	]
}
