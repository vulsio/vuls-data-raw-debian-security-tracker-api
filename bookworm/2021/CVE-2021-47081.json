{
	"id": "CVE-2021-47081",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  habanalabs/gaudi: Fix a potential use after free in gaudi_memset_device_memory  Our code analyzer reported a uaf.  In gaudi_memset_device_memory, cb is get via hl_cb_kernel_create() with 2 refcount. If hl_cs_allocate_job() failed, the execution runs into release_cb branch. One ref of cb is dropped by hl_cb_put(cb) and could be freed if other thread also drops one ref. Then cb is used by cb->id later, which is a potential uaf.  My patch add a variable 'id' to accept the value of cb->id before the hl_cb_put(cb) is called, to avoid the potential uaf.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "unimportant",
			"fixed_version": "0",
			"repository": [
				{
					"name": "bookworm-security",
					"version": "6.1.69-1"
				},
				{
					"name": "bookworm",
					"version": "6.1.76-1"
				}
			]
		}
	]
}
