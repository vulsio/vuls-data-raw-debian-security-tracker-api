{
	"id": "CVE-2023-52638",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  can: j1939: prevent deadlock by changing j1939_socks_lock to rwlock  The following 3 locks would race against each other, causing the deadlock situation in the Syzbot bug report:  - j1939_socks_lock - active_session_list_lock - sk_session_queue_lock  A reasonable fix is to change j1939_socks_lock to an rwlock, since in the rare situations where a write lock is required for the linked list that j1939_socks_lock is protecting, the code does not attempt to acquire any more locks. This would break the circular lock dependency, where, for example, the current thread already locks j1939_socks_lock and attempts to acquire sk_session_queue_lock, and at the same time, another thread attempts to acquire j1939_socks_lock while holding sk_session_queue_lock.  NOTE: This patch along does not fix the unregister_netdevice bug reported by Syzbot; instead, it solves a deadlock situation to prepare for one or more further patches to actually fix the Syzbot bug, which appears to be a reference counting problem within the j1939 codebase.  [mkl: remove unrelated newline change]",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "open",
			"urgency": "not yet assigned",
			"repository": [
				{
					"name": "bookworm-security",
					"version": "6.1.69-1"
				},
				{
					"name": "bookworm",
					"version": "6.1.76-1"
				}
			]
		}
	]
}
