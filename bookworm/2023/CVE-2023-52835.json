{
	"id": "CVE-2023-52835",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  perf/core: Bail out early if the request AUX area is out of bound  When perf-record with a large AUX area, e.g 4GB, it fails with:      #perf record -C 0 -m ,4G -e arm_spe_0// -- sleep 1     failed to mmap with 12 (Cannot allocate memory)  and it reveals a WARNING with __alloc_pages():  \t------------[ cut here ]------------ \tWARNING: CPU: 44 PID: 17573 at mm/page_alloc.c:5568 __alloc_pages+0x1ec/0x248 \tCall trace: \t __alloc_pages+0x1ec/0x248 \t __kmalloc_large_node+0xc0/0x1f8 \t __kmalloc_node+0x134/0x1e8 \t rb_alloc_aux+0xe0/0x298 \t perf_mmap+0x440/0x660 \t mmap_region+0x308/0x8a8 \t do_mmap+0x3c0/0x528 \t vm_mmap_pgoff+0xf4/0x1b8 \t ksys_mmap_pgoff+0x18c/0x218 \t __arm64_sys_mmap+0x38/0x58 \t invoke_syscall+0x50/0x128 \t el0_svc_common.constprop.0+0x58/0x188 \t do_el0_svc+0x34/0x50 \t el0_svc+0x34/0x108 \t el0t_64_sync_handler+0xb8/0xc0 \t el0t_64_sync+0x1a4/0x1a8  'rb->aux_pages' allocated by kcalloc() is a pointer array which is used to maintains AUX trace pages. The allocated page for this array is physically contiguous (and virtually contiguous) with an order of 0..MAX_ORDER. If the size of pointer array crosses the limitation set by MAX_ORDER, it reveals a WARNING.  So bail out early with -ENOMEM if the request AUX area is out of bound, e.g.:      #perf record -C 0 -m ,4G -e arm_spe_0// -- sleep 1     failed to mmap with 12 (Cannot allocate memory)",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.64-1",
			"repository": [
				{
					"name": "bookworm",
					"version": "6.1.106-3"
				},
				{
					"name": "bookworm-security",
					"version": "6.1.99-1"
				}
			]
		}
	]
}
