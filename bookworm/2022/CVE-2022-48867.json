{
	"id": "CVE-2022-48867",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  dmaengine: idxd: Prevent use after free on completion memory  On driver unload any pending descriptors are flushed at the time the interrupt is freed: idxd_dmaengine_drv_remove() -> \tdrv_disable_wq() -> \t\tidxd_wq_free_irq() -> \t\t\tidxd_flush_pending_descs().  If there are any descriptors present that need to be flushed this flow triggers a \"not present\" page fault as below:   BUG: unable to handle page fault for address: ff391c97c70c9040  #PF: supervisor read access in kernel mode  #PF: error_code(0x0000) - not-present page  The address that triggers the fault is the address of the descriptor that was freed moments earlier via: drv_disable_wq()->idxd_wq_free_resources()  Fix the use after free by freeing the descriptors after any possible usage. This is done after idxd_wq_reset() to ensure that the memory remains accessible during possible completion writes by the device.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.8-1",
			"repository": [
				{
					"name": "bookworm",
					"version": "6.1.115-1"
				},
				{
					"name": "bookworm-security",
					"version": "6.1.112-1"
				}
			]
		}
	]
}
