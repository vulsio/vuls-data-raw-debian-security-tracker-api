{
	"id": "CVE-2022-48974",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  netfilter: conntrack: fix using __this_cpu_add in preemptible  Currently in nf_conntrack_hash_check_insert(), when it fails in nf_ct_ext_valid_pre/post(), NF_CT_STAT_INC() will be called in the preemptible context, a call trace can be triggered:     BUG: using __this_cpu_add() in preemptible [00000000] code: conntrack/1636    caller is nf_conntrack_hash_check_insert+0x45/0x430 [nf_conntrack]    Call Trace:     <TASK>     dump_stack_lvl+0x33/0x46     check_preemption_disabled+0xc3/0xf0     nf_conntrack_hash_check_insert+0x45/0x430 [nf_conntrack]     ctnetlink_create_conntrack+0x3cd/0x4e0 [nf_conntrack_netlink]     ctnetlink_new_conntrack+0x1c0/0x450 [nf_conntrack_netlink]     nfnetlink_rcv_msg+0x277/0x2f0 [nfnetlink]     netlink_rcv_skb+0x50/0x100     nfnetlink_rcv+0x65/0x144 [nfnetlink]     netlink_unicast+0x1ae/0x290     netlink_sendmsg+0x257/0x4f0     sock_sendmsg+0x5f/0x70  This patch is to fix it by changing to use NF_CT_STAT_INC_ATOMIC() for nf_ct_ext_valid_pre/post() check in nf_conntrack_hash_check_insert(), as well as nf_ct_ext_valid_post() in __nf_conntrack_confirm().  Note that nf_ct_ext_valid_pre() check in __nf_conntrack_confirm() is safe to use NF_CT_STAT_INC(), as it's under local_bh_disable().",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.4-1",
			"repository": [
				{
					"name": "bookworm-security",
					"version": "6.1.119-1"
				},
				{
					"name": "bookworm",
					"version": "6.1.115-1"
				}
			]
		}
	]
}
