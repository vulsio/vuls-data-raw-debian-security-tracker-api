{
	"id": "CVE-2024-39495",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  greybus: Fix use-after-free bug in gb_interface_release due to race condition.  In gb_interface_create, &intf->mode_switch_completion is bound with gb_interface_mode_switch_work. Then it will be started by gb_interface_request_mode_switch. Here is the relevant code. if (!queue_work(system_long_wq, &intf->mode_switch_work)) { \t... }  If we call gb_interface_release to make cleanup, there may be an unfinished work. This function will call kfree to free the object \"intf\". However, if gb_interface_mode_switch_work is scheduled to run after kfree, it may cause use-after-free error as gb_interface_mode_switch_work will use the object \"intf\". The possible execution flow that may lead to the issue is as follows:  CPU0                            CPU1                              |   gb_interface_create                             |   gb_interface_request_mode_switch gb_interface_release        | kfree(intf) (free)          |                             |   gb_interface_mode_switch_work                             |   mutex_lock(&intf->mutex) (use)  Fix it by canceling the work before kfree.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.99-1",
			"repository": [
				{
					"name": "bookworm-security",
					"version": "6.1.112-1"
				},
				{
					"name": "bookworm",
					"version": "6.1.115-1"
				}
			]
		}
	]
}
