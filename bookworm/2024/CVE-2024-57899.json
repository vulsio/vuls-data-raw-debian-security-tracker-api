{
	"id": "CVE-2024-57899",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  wifi: mac80211: fix mbss changed flags corruption on 32 bit systems  On 32-bit systems, the size of an unsigned long is 4 bytes, while a u64 is 8 bytes. Therefore, when using or_each_set_bit(bit, &bits, sizeof(changed) * BITS_PER_BYTE), the code is incorrectly searching for a bit in a 32-bit variable that is expected to be 64 bits in size, leading to incorrect bit finding.  Solution: Ensure that the size of the bits variable is correctly adjusted for each architecture.   Call Trace:   ? show_regs+0x54/0x58   ? __warn+0x6b/0xd4   ? ieee80211_link_info_change_notify+0xcc/0xd4 [mac80211]   ? report_bug+0x113/0x150   ? exc_overflow+0x30/0x30   ? handle_bug+0x27/0x44   ? exc_invalid_op+0x18/0x50   ? handle_exception+0xf6/0xf6   ? exc_overflow+0x30/0x30   ? ieee80211_link_info_change_notify+0xcc/0xd4 [mac80211]   ? exc_overflow+0x30/0x30   ? ieee80211_link_info_change_notify+0xcc/0xd4 [mac80211]   ? ieee80211_mesh_work+0xff/0x260 [mac80211]   ? cfg80211_wiphy_work+0x72/0x98 [cfg80211]   ? process_one_work+0xf1/0x1fc   ? worker_thread+0x2c0/0x3b4   ? kthread+0xc7/0xf0   ? mod_delayed_work_on+0x4c/0x4c   ? kthread_complete_and_exit+0x14/0x14   ? ret_from_fork+0x24/0x38   ? kthread_complete_and_exit+0x14/0x14   ? ret_from_fork_asm+0xf/0x14   ? entry_INT80_32+0xf0/0xf0  [restore no-op path for no changes]",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "open",
			"urgency": "not yet assigned",
			"repository": [
				{
					"name": "bookworm",
					"version": "6.1.123-1"
				},
				{
					"name": "bookworm-security",
					"version": "6.1.119-1"
				}
			]
		}
	]
}
