{
	"id": "CVE-2024-46750",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  PCI: Add missing bridge lock to pci_bus_lock()  One of the true positives that the cfg_access_lock lockdep effort identified is this sequence:    WARNING: CPU: 14 PID: 1 at drivers/pci/pci.c:4886 pci_bridge_secondary_bus_reset+0x5d/0x70   RIP: 0010:pci_bridge_secondary_bus_reset+0x5d/0x70   Call Trace:    <TASK>    ? __warn+0x8c/0x190    ? pci_bridge_secondary_bus_reset+0x5d/0x70    ? report_bug+0x1f8/0x200    ? handle_bug+0x3c/0x70    ? exc_invalid_op+0x18/0x70    ? asm_exc_invalid_op+0x1a/0x20    ? pci_bridge_secondary_bus_reset+0x5d/0x70    pci_reset_bus+0x1d8/0x270    vmd_probe+0x778/0xa10    pci_device_probe+0x95/0x120  Where pci_reset_bus() users are triggering unlocked secondary bus resets. Ironically pci_bus_reset(), several calls down from pci_reset_bus(), uses pci_bus_lock() before issuing the reset which locks everything *but* the bridge itself.  For the same motivation as adding:    bridge = pci_upstream_bridge(dev);   if (bridge)     pci_dev_lock(bridge);  to pci_reset_function() for the \"bus\" and \"cxl_bus\" reset cases, add pci_dev_lock() for @bus->self to pci_bus_lock().  [bhelgaas: squash in recursive locking deadlock fix from Keith Busch: https://lore.kernel.org/r/20240711193650.701834-1-kbusch@meta.com]",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.112-1",
			"repository": [
				{
					"name": "bookworm-security",
					"version": "6.1.119-1"
				},
				{
					"name": "bookworm",
					"version": "6.1.115-1"
				}
			]
		}
	]
}
