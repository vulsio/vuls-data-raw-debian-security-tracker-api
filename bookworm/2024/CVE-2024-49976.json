{
	"id": "CVE-2024-49976",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  tracing/timerlat: Drop interface_lock in stop_kthread()  stop_kthread() is the offline callback for \"trace/osnoise:online\", since commit 5bfbcd1ee57b (\"tracing/timerlat: Add interface_lock around clearing of kthread in stop_kthread()\"), the following ABBA deadlock scenario is introduced:  T1                            | T2 [BP]               | T3 [AP] osnoise_hotplug_workfn()      | work_for_cpu_fn()     | cpuhp_thread_fun()                               |   _cpu_down()         |   osnoise_cpu_die()   mutex_lock(&interface_lock) |                       |     stop_kthread()                               |     cpus_write_lock() |       mutex_lock(&interface_lock)   cpus_read_lock()            |     cpuhp_kick_ap()   |  As the interface_lock here in just for protecting the \"kthread\" field of the osn_var, use xchg() instead to fix this issue. Also use for_each_online_cpu() back in stop_per_cpu_kthreads() as it can take cpu_read_lock() again.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "unimportant",
			"fixed_version": "0",
			"repository": [
				{
					"name": "bookworm",
					"version": "6.1.123-1"
				},
				{
					"name": "bookworm-security",
					"version": "6.1.128-1"
				}
			]
		}
	]
}
