{
	"id": "CVE-2024-44950",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  serial: sc16is7xx: fix invalid FIFO access with special register set  When enabling access to the special register set, Receiver time-out and RHR interrupts can happen. In this case, the IRQ handler will try to read from the FIFO thru the RHR register at address 0x00, but address 0x00 is mapped to DLL register, resulting in erroneous FIFO reading.  Call graph example:     sc16is7xx_startup(): entry     sc16is7xx_ms_proc(): entry     sc16is7xx_set_termios(): entry     sc16is7xx_set_baud(): DLH/DLL = $009C --> access special register set     sc16is7xx_port_irq() entry            --> IIR is 0x0C     sc16is7xx_handle_rx() entry     sc16is7xx_fifo_read(): --> unable to access FIFO (RHR) because it is                                mapped to DLL (LCR=LCR_CONF_MODE_A)     sc16is7xx_set_baud(): exit --> Restore access to general register set  Fix the problem by claiming the efr_lock mutex when accessing the Special register set.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.123-1",
			"repository": [
				{
					"name": "bookworm-security",
					"version": "6.1.128-1"
				},
				{
					"name": "bookworm",
					"version": "6.1.123-1"
				}
			]
		}
	]
}
