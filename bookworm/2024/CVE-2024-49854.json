{
	"id": "CVE-2024-49854",
	"description": "In the Linux kernel, the following vulnerability has been resolved:  block, bfq: fix uaf for accessing waker_bfqq after splitting  After commit 42c306ed7233 (\"block, bfq: don't break merge chain in bfq_split_bfqq()\"), if the current procress is the last holder of bfqq, the bfqq can be freed after bfq_split_bfqq(). Hence recored the bfqq and then access bfqq->waker_bfqq may trigger UAF. What's more, the waker_bfqq may in the merge chain of bfqq, hence just recored waker_bfqq is still not safe.  Fix the problem by adding a helper bfq_waker_bfqq() to check if bfqq->waker_bfqq is in the merge chain, and current procress is the only holder.",
	"scope": "local",
	"packages": [
		{
			"name": "linux",
			"status": "resolved",
			"urgency": "not yet assigned",
			"fixed_version": "6.1.115-1",
			"repository": [
				{
					"name": "bookworm",
					"version": "6.1.123-1"
				},
				{
					"name": "bookworm-security",
					"version": "6.1.119-1"
				}
			]
		}
	]
}
